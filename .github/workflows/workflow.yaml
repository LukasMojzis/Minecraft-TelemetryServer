name: Node.js CI/CD

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci
      - name: Package
        run: |
          VERSION_SUFFIX=$(git rev-parse --short HEAD)
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')
          REPO_NAME=$(basename ${GITHUB_REPOSITORY} | sed 's/Minecraft-//g')
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION_SUFFIX=$(echo ${GITHUB_REF#refs/tags/} | sed 's/\//-/g')
          fi
          NEW_NAME="${REPO_NAME}-${BRANCH_NAME}-${VERSION_SUFFIX}"
          echo "NEW_NAME=$NEW_NAME" >> $GITHUB_ENV
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.NEW_NAME }}
          path: |
            ./**
            !.git/**
            !.github/**
            !.idea/**
      - name: Zip artifact
        run: zip -r ${{ env.NEW_NAME }}.zip  . -x "*.git*" -x "*.github*" -x "*.idea*"
        if: startsWith(github.ref, 'refs/tags/')
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        if: startsWith(github.ref, 'refs/tags/')
      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.NEW_NAME }}.zip
          asset_name: ${{ env.NEW_NAME }}.zip
          asset_content_type: application/zip
        if: startsWith(github.ref, 'refs/tags/')
